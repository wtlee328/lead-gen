export interface Industry {
    value: string;
    zh: string;
    en: string;
}
export type LanguageCode = 'zh' | 'en';
export interface Translations {
    dashboardTitle: string;
    formDescription: string;
    sidebarLeadSearchLink: string;
    sidebarLeadSearchTitle: string;
    sidebarEngagementLink: string;
    sidebarEngagementTitle: string;
    sidebarSettingsLink: string;
    sidebarSettingsTitle: string;
    languageDropdownHeader: string;
    themeDropdownHeader: string;
    userActionsDropdownTitle: string;
    userSettingsPageLink: string;
    signOutButton: string;
    filtersTitle: string;
    tabsTitle: string;
    tabNew: string;
    tabSaved: string;
    tabArchived: string;
    addFilterPlaceholder: string;
    selectFilterPlaceholder: string;
    clearAllFiltersButton: string;
    clearFilterSectionTooltip: string;
    mainQueryLabel: string;
    mainQueryPlaceholder: string;
    advancedBtnTextShow: string;
    advancedBtnTextHide: string;
    jobTitleLabel: string;
    industryLabel: string;
    industryPlaceholder: string;
    locationLabel: string;
    companySizeLabel: string;
    companySizePlaceholder: string;
    keywordsLabel: string;
    advKeywordsPlaceholder: string;
    addFiltersBtnText: string;
    tagAreaLabel: string;
    removeFilterTooltip: string;
    searchLeadsButton: string;
    searchFormToggleShowTooltip: string;
    searchFormToggleHideTooltip: string;
    leadsListTitle: string;
    refreshButton: string;
    loadingLeads: string;
    noNewLeadsYet: string;
    noSavedLeads: string;
    noArchivedLeads: string;
    noLeadsFound: string;
    colName: string;
    colJobTitle: string;
    colIndustry: string;
    colLocation: string;
    colCompanyName: string;
    colCompanySize: string;
    colPhone: string;
    colLinkedIn: string;
    colKeywords: string;
    colEmail: string;
    colNotes: string;
    colCreatedAt: string;
    colStatus: string;
    colActions: string;
    actionSaveTooltip: string;
    actionArchiveTooltip: string;
    actionRestoreTooltip: string;
    actionDeleteTooltip: string;
    actionMoveToSavedTooltip: string;
    tooltipSave: string;
    tooltipArchive: string;
    tooltipRestore: string;
    tooltipMoveToSaved: string;
    tooltipDelete: string;
    selectAllPageButton: string;
    selectAllPageTooltip: string;
    deselectAllButton: string;
    deselectAllPageTooltip: string;
    batchActionsDropdownTitle: string;
    batchSaveButton: string;
    batchArchiveButton: string;
    batchRestoreButton: string;
    batchDeleteButton: string;
    batchMoveToSavedButton: string;
    showLessButton: string;
    showMoreButtonText: (count: number) => string;
    previousPage: string;
    nextPage: string;
    pageText: string;
    ofText: string;
    showNum: string;
    alertError: string;
    alertSuccess: string;
    alertWarning: string;
    errorRequired: (fieldName: string) => string;
    noSearchCriteria: string;
    userNotAuthMessage: string;
    n8nConfigError: string;
    accessDeniedMessage: string;
    confirmArchiveUnsaved: string;
    unsavedLeadsArchived: string;
    searchLeadsSuccess: string;
    leadSavedSuccess: string;
    leadArchivedSuccess: string;
    leadRestoredSuccess: string;
    leadDeletedSuccess: string;
    leadUpdateError: string;
    leadDeleteError: string;
    autoArchiveError: string;
    confirmBatchSave: (count: number) => string;
    confirmBatchArchive: (count: number) => string;
    confirmBatchRestore: (count: number) => string;
    confirmBatchDelete: (count: number) => string;
    confirmBatchMoveToSaved: (count: number) => string;
    noLeadsEligibleForAction: (action: string) => string;
    batchActionResult: (action: string, success: number, failed: number) => string;
    engagementCenterTitle: string;
    searchLeadsPlaceholder: string;
    filterByStatusAll: string;
    filterStatusPendingIcebreaker: string;
    filterStatusIcebreakerSent: string;
    filterStatusReplied: string;
    filterStatusFollowUpDue: string;
    loading: string;
    noLeadsInHub: string;
    addLeadsFromProspects: string;
    followUpOn: string;
    selectLeadPrompt: string;
    viewLinkedIn: string;
    removeFromHub: string;
    icebreakerSectionTitle: string;
    craftIcebreakerPlaceholder: string;
    getAISuggestion: string;
    sendIcebreakerButton: string;
    sentOn: string;
    activityAndFollowUpsTitle: string;
    logOrSchedule: string;
    logEmailReply: string;
    logCall: string;
    logMeeting: string;
    scheduleFollowUpEmail: string;
    scheduleFollowUpCall: string;
    notesPlaceholder: string;
    addActivityButton: string;
    historyLog: string;
    followUpDue: string;
    noActivityYet: string;
    generalNotesTitle: string;
    addNotesPlaceholder: string;
    saveNotesButton: string;
    statusNotSent: string;
    statusSent: string;
    statusOpened: string;
    statusRepliedEngagement: string;
    statusBounced: string;
    statusError: string;
    productName?: string;
    landingHeadline?: string;
    landingSubheadline?: string;
    landingFeaturesTitle?: string;
    landingFeature1Title?: string;
    landingFeature1Desc?: string;
    landingFeature2Title?: string;
    landingFeature2Desc?: string;
    landingFeature3Title?: string;
    landingFeature3Desc?: string;
    landingFeature4Title?: string;
    landingFeature4Desc?: string;
    signUpNowButton?: string;
    loginTitle?: string;
    emailLabel?: string;
    passwordLabel?: string;
    loginButton?: string;
    signInWithGoogleButton?: string;
    signInWithLinkedInButton?: string;
    orDivider?: string;
    noAccountPrompt?: string;
    signUpLink?: string;
    emailPlaceholder?: string;
    passwordPlaceholder?: string;
    loginErrorDefault?: string;
    formTitle?: string;
    searchSectionTitle?: string;
    leadIcebreakerColumn?: string;
    sendIcebreakerTooltip?: string;
    viewDetailsTooltip?: string;
    contactNameLabel?: string;
    companyNameLabel?: string;
    statusLabel?: string;
    selectStatusPlaceholder?: string;
    statusNew?: string;
    statusContacted?: string;
    statusFollowUp?: string;
    statusClosed?: string;
    statusNewProspect?: string;
    statusReplied?: string;
    customNotesLabel?: string;
    errorMinLength?: (fieldName: string, min: number) => string;
    contactOrCompanyRequiredError?: string;
}
export declare const industriesData: Industry[];
export interface LeadStatusOption {
    value: string;
    textKey: 'statusNewProspect' | 'statusContacted' | 'statusFollowUp' | 'statusReplied';
}
export declare const uiTexts: Record<LanguageCode, Translations>;
